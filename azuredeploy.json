{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "hubResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "Resource group name of the Hub"
            }
        },
        "hubVnetName": {
            "type": "string",
            "defaultValue": "hub-vnet",
            "metadata": {
                "description": "VN Name of the VNet where the hub resides"
            }
        },
        "hubLoadBalancerIP": {
            "type": "string",
            "metadata": {
                "description": "IP Address of the outbound Load Balancer in the hub"
            }
        },
        "networkSecurityGroupInboundSrcIP": {
            "type": "string",
             "metadata": {
                 "description": "Your source public IP address. Added to the inbound NSG on eth0 (MGMT), to restrict access to the deployment."
             },
             "defaultValue": "1.1.1.1/32"
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "spoke-vnet",
            "metadata": {
                "description": "Virtual Network Name"
            }
        },
        "virtualNetworkAddressPrefix": {
            "type": "string",
            "defaultValue": "192.168.0.0/21",
            "metadata": {
                "description": "CIDR for Virtual Network"
            }
        },
        "mgmtSubnetPrefix": {
            "type": "string",
            "defaultValue": "192.168.0.0/24",
                    "metadata": {
                        "description": "CIDR for Management Network"
                    }
            },
        "untrustedSubnetPrefix": {
            "type": "string",
            "defaultValue": "192.168.1.0/24",
            "metadata": {
                "description": "CIDR for Untrusted Network"
            }
        },
        "trustedSubnetPrefix": {
            "type": "string",
            "defaultValue": "192.168.2.0/24",
            "metadata": {
                "description": "CIDR for Trusted Network"
            }
        },
        "appGatewayDnsName": {
            "type": "string",
            "metadata": {
                "description": "App Gateway Public IP DNS Name. Must be globally unique."
            }
        },
        "appGatewaySubnetPrefix": {
            "type": "string",
            "defaultValue": "192.168.3.0/24",
            "metadata": {
                "description": "CIDR for App Gateway"
            }
        },
        "backendSubnetPrefix": {
            "type": "string",
            "defaultValue": "192.168.4.0/24",
            "metadata": {
                "description": "CIDR for Backend WWW Network"
            }
        },
        "backendVmSize": {
             "type": "string",
             "allowedValues": [
                    "Standard_A1",
                    "Standard_D1",
                    "Standard_D1_v2"
             ],
             "metadata": {
                "description": "Azure VM size for backend VMs. Not all sizes are available in all regions."
             },
             "defaultValue": "Standard_D1_v2"
        },
        "firewallModel": {
             "type": "string",
             "defaultValue": "byol",
             "allowedValues": [
                    "byol",
                    "bundle1",
                    "bundle2"
             ],
             "metadata": {
                 "description": "byol = Bring Your Own License; bundle1 = Bundle 1 PAYG (Hourly); bundle2 = Bundle 2 PAYG (Hourly)"
             }
        },
        "firewallVmSize": {
             "type": "string",
             "allowedValues": [
                    "Standard_D3",
                    "Standard_D4",
                    "Standard_D3_v2",
                    "Standard_D4_v2",
                    "Standard_D5_v2",
                    "Standard_D14_v2",
                    "Standard_A4"
             ],
             "metadata": {
                "description": "Azure VM size for VM-Series"
             },
             "defaultValue": "Standard_D3_v2"
        },
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Name of the storage account created to store the VM's disks. Storage account name must be globally unique."
            } 
        },
        "storageAccountType": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Premium_LRS",
                "Standard_RAGRS"
            ],
            "metadata": {
                "description": "Type of the storage account created"
            },
            "defaultValue": "Standard_LRS"
        },
        "username": {
            "type": "string",
            "defaultValue": "pandemo",
            "metadata": {
                "description": "Username of the administrator account of VM instances"
            }
        },
        "authenticationType": {
            "type": "string",
            "metadata": {
                "description": "Type of administrator user authentication "
            },
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "defaultValue": "password"
        },
        "password": {
            "type": "securestring",
            "defaultValue": "Dem0pa$$w0rd",
            "metadata": {
                "description": "Password for the administrator account of all VM instances. Must be specified if Authentication Type is 'password'."
            }
        },
        "sshPublicKey": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "SSH RSA public key file as a string. Must be specified if Authentication Type is 'sshPublicKey'."
            }
        },
        "bootstrapStorageAccount": {
            "type": "string",
            "metadata":{
              "description": "Storage account containing bootstrap data"
            }
        },
        "bootstrapStorageAccountAccessKey": {
            "type": "securestring",
            "metadata":{
              "description": "Storage account access key to read blob data privately"
            }
        },
        "bootstrapFileShare": {
            "type": "string",
            "metadata":{
                "description": "File Share containing bootstrap files"
            }
        },
        "bootstrapSharedDir": {
            "type": "string",
            "defaultValue": "",
            "metadata":{
                    "description": "(OPTIONAL) Directory name under File Share containing bootstrap files"
            }   
        },
        "vmScaleSetMinCount": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "The minimum (and default) number of FWs that will be deployed into the VM Scale Set."
            }
        },
        "vmScaleSetMaxCount": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "The maximum number of FWs that can be deployed into the VM Scale Set."
            }
        },
        "scaleInThreshold": {
            "type": "int",
            "defaultValue": 20,
            "metadata": {
                "description": "The Threshold below which FW VM scale in kicks in."
            }
        },
        "scaleOutThreshold": {
            "type": "int",
            "defaultValue": 80,
            "metadata": {
                "description": "The Threshold above which FW VM scale out kicks in."
            }
        },
        "autoScaleMetric": {
             "type": "string",
             "allowedValues": [
                  "Data Plane CPU Utilization %", 
                  "GP Gateway Utilization %",
                  "GP Gateway Active Tunnels",
                  "Data Plane Packet Buffer Utilization %",
                  "Active Sessions",
                  "SSL Proxy Session Utilization %",
                  "Session Utilization %"                  
                ], 
             "defaultValue": "Active Sessions", 
             "metadata": {
                 "description": "Select the metric on which auto scale events should be triggered."
             } 
        }
    },
    "variables": {
        "location" : "[resourceGroup().location]",
        "namingInfix": "[substring(uniqueString(resourceGroup().id), 0, 5)]",
        "rgname" : "[resourceGroup().name]",
        "networkSecurityGroupName" : "[concat(variables('rgname'), '-mgmt-nsg-', variables('namingInfix'))]",
        "MgmtSubnetName" : "[concat(parameters('virtualNetworkName'), '-mgmt-subnet')]",
        "untrustedSubnetName" : "[concat(parameters('virtualNetworkName'), '-untrust-subnet')]",
        "trustedSubnetName" : "[concat(parameters('virtualNetworkName'), '-trust-subnet')]",
        "backendSubnetName" : "[concat(parameters('virtualNetworkName'), '-backend-subnet')]",
        "appGatewaySubnetName" : "[concat(parameters('virtualNetworkName'), '-appgw-subnet')]",
        "internalLoadBalancerName" : "myPrivateLB",
        "LoadBalancerType" : "layer-7",
        "firewallVmCount" : 2,
        "baseUrl" : "https://raw.githubusercontent.com/PaloAltoNetworks/Azure-Transit-VNet/master/Azure-Transit-VNET-1.1/azure-spoke",
        "nsgURL" : "[concat(variables('baseUrl'),'/nsg-new.json')]",
        "vnetURL" : "[concat(variables('baseUrl'),'/deployVnet.json')]",
        "publicLBURL" : "[concat(variables('baseUrl'),'/public-lb-', variables('LoadBalancerType'), '.json')]",
        "privateLBURL" : "[concat(variables('baseUrl'),'/private-lb-', parameters('authenticationType'),'.json')]",
        "storageAccountSetupURL" : "[concat(variables('baseUrl'),'/deployStorage.json')]",
        "vnetPeeringURL": "[concat(variables('baseUrl'), '/deployVnetPeering.json')]",
        "defaultUdrSetupURL": "[concat(variables('baseUrl'), '/deployDefaultUDR.json')]",
        "vmseriesURL" : "[concat(variables('baseUrl'),'/vmseries.json')]",
        "appInsightsApiVersion": "2018-05-01", 
        "appInsightsComponentsApiVersion": "2018-05-01",
        "networkApiVersion": "2017-06-01",
        "computeApiVersion": "2017-03-30",
        "appInsightsName": "[concat(variables('rgname'), '-appinsights-', variables('namingInfix'))]",
        "appInsightsUrl": "[concat(variables('baseUrl'),'/deployAppInsights.json')]",
        "nicNameWorker": "[concat('tempworkernic', variables('namingInfix'))]",
        "workerName": "[concat('tempworker', variables('namingInfix'))]",
        "appGatewayName": "[concat(variables('rgname'), 'appgw', variables('namingInfix'))]",
        "appGwBackendPoolName": "[concat(variables('rgname'), 'appGwBepool', variables('namingInfix'))]",
        "vmssName": "[concat('pavmfw', variables('namingInfix'))]",
        "customDataField": "[concat('storage-account=', parameters('bootstrapStorageAccount'), ',access-key=', parameters('bootstrapStorageAccountAccessKey'), ',file-share=', parameters('bootstrapFileShare'),',share-directory=', parameters('bootstrapSharedDir'))]",
        "space": " "
    },
    "resources": [
        {
            "name": "SetupAppInsights",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('appInsightsApiVersion')]",
            "properties": { 
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('appInsightsUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[variables('appInsightsName')]"
                    }
                }
            }
        },
        {
            "name": "SetupNSG",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/SetupAppInsights"
            ],
            "properties": { 
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nsgURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "nsgName": {
                        "value": "[variables('networkSecurityGroupName')]"
                    },
                    "srcIPInboundNSG": {
                        "value": "[parameters('networkSecurityGroupInboundSrcIP')]"
                    },
                    "virtualNetworkAddressPrefix": {
                        "value": "[parameters('virtualNetworkAddressPrefix')]"
                    }
                }
            }
        },
        {
            "name": "SetupDefaultUDR",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/SetupNSG"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('defaultUdrSetupURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "subnetPrefix": {
                         "value": "0.0.0.0/0"
                    },
                    "nextHopIP": {
                         "value": "[parameters('hubLoadBalancerIP')]"
                    }
                }
            }
        },
        {
            "name": "SetupVNET",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/SetupNSG",
                "Microsoft.Resources/deployments/SetupDefaultUDR"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nsgName": {
                        "value": "[variables('networkSecurityGroupName')]"
                    },
                    "virtualNetworkName": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "virtualNetworkAddressPrefix": {
                        "value": "[parameters('virtualNetworkAddressPrefix')]"
                    },
                    "subnet0Name": {
                         "value": "[variables('MgmtSubnetName')]"
                    },
                    "subnet1Name": {
                         "value": "[variables('untrustedSubnetName')]"
                    },
                    "subnet2Name": {
                         "value": "[variables('trustedSubnetName')]"
                    },
                    "subnetLBName": {
                         "value": "[variables('appGatewaySubnetName')]"
                    },
                    "subnetWWWName": {
                         "value": "[variables('backendSubnetName')]"
                    },
                    "subnet0Prefix": {
                         "value": "[parameters('mgmtSubnetPrefix')]"
                    },
                    "subnet1Prefix": {
                         "value": "[parameters('untrustedSubnetPrefix')]"
                    },
                    "subnet2Prefix": {
                         "value": "[parameters('trustedSubnetPrefix')]"
                    },
                    "subnetLBPrefix": {
                         "value": "[parameters('appGatewaySubnetPrefix')]"
                    },
                    "subnetWWWPrefix": {
                         "value": "[parameters('backendSubnetPrefix')]"
                    }
                }
            }
        },
        {
            "name": "SettingUpStorageAccount",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('storageAccountSetupURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "storageAccountType": {
                        "value": "[parameters('storageAccountType')]"
                    },
                    "storageAccountName": {
                        "value": "[parameters('storageAccountName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('networkApiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicNameWorker')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "Microsoft.Resources/deployments/SetupVNET"
            ],
            "properties": {
                "ipConfigurations": [{
                    "name": "ipconfig-worker",
                    "properties": {
                        "privateIPAllocationMethod": "Dynamic",
                        "subnet": {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'), '/subnets/', variables('MgmtSubnetName'))]"
                        }
                    }
                }]
            }
        },
        {
            "apiVersion": "[variables('computeApiVersion')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('workerName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "Microsoft.Resources/deployments/SetupVNET",
                "Microsoft.Resources/deployments/SettingUpStorageAccount",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicNameWorker'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_A1"
                },
                "osProfile": {
                    "computername": "[variables('workerName')]",
                    "adminUsername": "[parameters('username')]",
                    "adminPassword": "[parameters('password')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "worker-osdisk",
                        "vhd": {
                            "uri": "[concat('https://', parameters('storageAccountName'), '.blob.core.windows.net/vhds/tempworker.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicNameWorker'))]",
                            "properties": { "primary": true}
                        }
                    ]
                }
            }
        },
        {
            "name": "[concat(variables('workerName'),'/vm-customscript')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "[variables('computeApiVersion')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('workerName'))]"
            ],
            "properties":
            {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "settings": {
                    "fileUris": [
                        "https://raw.githubusercontent.com/PaloAltoNetworks/Azure-Transit-VNet/master/Azure-Transit-VNET-1.1/azure-spoke/publish.py",
                        "https://raw.githubusercontent.com/PaloAltoNetworks/Azure-Transit-VNet/master/Azure-Transit-VNET-1.1/azure-spoke/start.sh"
                    ],
                    "commandToExecute": "[concat('/bin/bash ./start.sh ', variables('space'), reference('SetupAppInsights').outputs.instrumentationKey.value, variables('space'), '&')]"
                }
            }
        },
        {
            "name": "SetupPublicLoadBalancer",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/SetupVNET",
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('workerName'),'vm-customscript')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('publicLBURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "lbName": {
                         "value": "[variables('appGatewayName')]"
                    },
                    "publicIPAddressName": {
                         "value": "[parameters('appGatewayDnsName')]"
                    },
                    "vnetName": {
                         "value": "[parameters('virtualNetworkName')]"
                    },
                    "subnetName": {
                         "value": "[variables('appGatewaySubnetName')]"
                    },
                    "appGwBackendPoolName": {
                        "value": "[variables('appGwBackendPoolName')]"
                    }
                }
            }
        },
        {
            "name": "SetupVMSeries",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/SetupVNET",
                "Microsoft.Resources/deployments/SetupPublicLoadBalancer",
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('workerName'),'vm-customscript')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmseriesURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "hubName": {
                        "value": "[parameters('hubResourceGroupName')]"
                    },
                    "vmssName": {
                        "value": "[variables('vmssName')]"
                    },
                    "vmSize": {
                         "value": "[parameters('firewallVmSize')]"
                    },
                    "vmScaleSetMinCount": {
                        "value": "[parameters('vmScaleSetMinCount')]"
                    },
                    "vmScaleSetMaxCount": {
                        "value": "[parameters('vmScaleSetMaxCount')]"
                    },
                    "vmSku": {
                         "value": "[parameters('firewallModel')]"
                    },
                    "adminUsername": {
                         "value": "[parameters('username')]"
                    },
                    "adminPassword": {
                         "value": "[parameters('password')]"
                    },
                    "customDataField": {
                        "value": "[variables('customDataField')]"
                    },
                    "virtualNetworkName": {
                         "value": "[parameters('virtualNetworkName')]"
                    },
                    "subnetNameMgmt": {
                        "value": "[variables('MgmtSubnetName')]"
                    },
                    "subnetNameUntrust": {
                        "value": "[variables('untrustedSubnetName')]"
                    },
                    "subnetNameTrust": {
                        "value": "[variables('trustedSubnetName')]"
                    },
                    "appGwName": {
                        "value": "[variables('appGatewayName')]"
                    },
                    "appGwBePoolName": {
                        "value": "[variables('appGwBackendPoolName')]"
                    },
                    "appInsightsName": {
                        "value": "[variables('appInsightsName')]"
                    },
                    "autoScaleMetric": {
                        "value": "[parameters('autoScaleMetric')]"
                    },
                    "scaleInThreshold": {
                        "value": "[parameters('scaleInThreshold')]"
                    },
                    "scaleOutThreshold": {
                        "value": "[parameters('scaleOutThreshold')]"
                    }
                }
             }
         },
         {
            "name": "SetupInternalLoadBalancer",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "Microsoft.Resources/deployments/SetupVNET",
                "Microsoft.Resources/deployments/SetupVMSeries"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('privateLBURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                         "value": "[reference('SettingUpStorageAccount').outputs.sid.value]"
                    },
                    "virtualNetworkName": {
                         "value": "[reference('SetupVNET').outputs.vnetName.value]"
                    },
                    "virtualNetworkExistingRGName": {
                         "value": "[variables('rgname')]"
                    },
                    "lbName": {
                         "value": "[variables('internalLoadBalancerName')]"
                    },
                    "adminUsername": {
                         "value": "[parameters('username')]"
                    },
                    "adminPassword": {
                         "value": "[parameters('password')]"
                    },
                    "sshKey": {
                         "value": "[parameters('sshPublicKey')]"
                    },
                    "subnetName": {
                         "value": "[variables('backendSubnetName')]"
                    },
                    "frontendSubnetName": {
                         "value": "[variables('trustedSubnetName')]"
                    },
                    "vmSize": {
                         "value": "[parameters('backendVmSize')]"
                    },
                    "baseUrl": {
                         "value": "[variables('baseUrl')]"
                    }
                }
             }
        },
        {
            "name": "SetupVNetPeering",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "dependsOn": [
                "Microsoft.Resources/deployments/SetupVNET",
                "Microsoft.Resources/deployments/SetupVMSeries"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetPeeringURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vNet1Name": {
                         "value": "[parameters('virtualNetworkName')]"
                    },
                    "vNet2Name": {
                         "value": "[parameters('hubVnetName')]"
                    },
                    "vNet2ResourceGroupName": {
                         "value": "[parameters('hubResourceGroupName')]"
                    }
                }
             }
        }
    ],
    "outputs": {
    }
}
